{"remainingRequest":"/Applications/XAMPP/xamppfiles/htdocs/vuejs-firebase-shopping-cart/node_modules/vue-loader/lib/index.js??vue-loader-options!/Applications/XAMPP/xamppfiles/htdocs/vuejs-firebase-shopping-cart/src/components/ProductDetails.vue?vue&type=style&index=0&id=1c354f03&scoped=true&lang=css&","dependencies":[{"path":"/Applications/XAMPP/xamppfiles/htdocs/vuejs-firebase-shopping-cart/src/components/ProductDetails.vue","mtime":1588175539641},{"path":"/Applications/XAMPP/xamppfiles/htdocs/vuejs-firebase-shopping-cart/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/vuejs-firebase-shopping-cart/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/vuejs-firebase-shopping-cart/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/vuejs-firebase-shopping-cart/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/vuejs-firebase-shopping-cart/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jYXB0aW9uLWZ1bGwgewogIHBhZGRpbmctcmlnaHQ6IDEwcHg7CiAgcGFkZGluZy1sZWZ0OiAxMHB4Owp9CgoucmF0aW5ncyB7CiAgcGFkZGluZy1yaWdodDogMTBweDsKICBwYWRkaW5nLWxlZnQ6IDEwcHg7CiAgY29sb3I6ICNkMTc1ODE7Cn0K"},{"version":3,"sources":["ProductDetails.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkFA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"ProductDetails.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div class=\"container\">\n  <div class=\"col-md-12\">\n    <div v-if=\"isProductLoading\" class=\"text-center\">\n      <grid-loader :loading=\"isProductLoading\" :color=\"loaderColor\" :size=\"loaderSize\" class=\"d-inline-block\" />\n    </div>\n    <div v-else class=\"card\">\n      <div class=\"row\">\n        <div class=\"col-12 col-md-4 offset-md-4\">\n          <div class=\"intrinsic\">\n            <img class=\"img-fluid intrinsic-item\" :src=\"item.thumbnail_url\" alt=\"\">\n          </div>\n        </div>\n      </div>\n\n      <div class=\"caption-full\">\n        <h4 class=\"pull-right\">$ {{ item.price }}</h4>\n        <h4> {{ item.title }}</h4>\n        <p> {{ item.description }} </p>\n      </div>\n      <div class=\"ratings\">\n        <span>{{ item.quantity }} left in stock</span>\n        <p class=\"pull-right\">\n          <button @click=\"addItem\" :disabled=\"item.quantity === 0\" class=\"btn btn-success\">\n                            Add to cart\n                        </button>\n        </p>\n        <div class=\"clearfix\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n</template>\n\n<script>\nimport {\n  mapActions,\n  mapGetters\n} from 'vuex';\nimport GridLoader from 'vue-spinner/src/GridLoader.vue';\n\nexport default {\n  components: {\n    GridLoader\n  },\n  data() {\n    return {\n      loaderColor: \"#5cb85c\",\n      loaderSize: \"50px\",\n    }\n  },\n  computed: {\n    ...mapGetters(['isProductLoading', 'products']),\n    item() {\n      let id = this.$route.params.id;\n      if (this.products.length >= id) {\n        let filterArr = this.products.filter((item) => {\n          return item.id == id\n        });\n        if (filterArr.length > 0) {\n          return filterArr[0];\n        }\n      }\n      return {};\n    }\n  },\n  methods: {\n    ...mapActions(['updateCart']),\n    addItem() {\n      const order = {\n        item: Object.assign({}, this.item),\n        quantity: 1,\n        isAdd: true\n      };\n      // console.log(order);\n      this.updateCart(order);\n    }\n  }\n}\n</script>\n\n<style scoped>\n.caption-full {\n  padding-right: 10px;\n  padding-left: 10px;\n}\n\n.ratings {\n  padding-right: 10px;\n  padding-left: 10px;\n  color: #d17581;\n}\n</style>\n"]}]}